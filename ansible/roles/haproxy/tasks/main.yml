- name: pull image haproxy
  podman_image:
    name: docker.io/haproxy:2.3

- name: stop container if exist
  shell: podman stop haproxy
  ignore_errors: true

- name: remove container if exist
  shell: podman rm haproxy
  ignore_errors: true

- name: Create haproxy config directory
  ansible.builtin.file:
    path: /containers_vols/haproxy
    owner: vagrant
    group: vagrant
    state: directory
    mode: '0775'

- name: Create directory for SSL certificates
  ansible.builtin.file:
    path: /containers_vols/haproxy/certs
    state: directory
    mode: '0755'

- name: Copy private key file to remote server
  ansible.builtin.copy:
    src: ../templates/bundle.pem
    dest: /containers_vols/haproxy/certs/bundle.pem
    mode: '0600'

- name: update haproxy config
  ansible.builtin.copy:
    src: ../templates/haproxy.j2
    dest: /containers_vols/haproxy/haproxy.cfg
    owner: vagrant
    group: vagrant
    mode: '0664'

- name: Run haproxy
  containers.podman.podman_container:
    name: haproxy
    image: 'docker.io/haproxy:2.3'
    ports:
      - '8443:8443'
      - '80:80'
    volumes:
      - '/containers_vols/haproxy/:/usr/local/etc/haproxy:z'
      - '/containers_vols/haproxy/certs/:/usr/local/etc/haproxy/certs/:z'
    cap_add:
      - IPC_LOCK
      - NET_RAW
    command: "/usr/local/sbin/haproxy -f /usr/local/etc/haproxy/haproxy.cfg -db"
    state: started
  register: result

- name: Install curl and ping in HAProxy container
  containers.podman.podman_container_exec:
    name: haproxy
    command: >
      sh -c "apt-get update &&
             apt-get install -y curl iputils-ping net-tools &&
             apt-get clean"
